<?phpclass r {    private static $responseType;    const RJSON=0;    const MODAL=1;    const ALL=2;    public static function setResponseType($responseType) {        self::$responseType=$responseType;    }    public static function getResponseType() {        return isset(self::$responseType)?self::$responseType:self::ALL;    }    private static function prettify($json) {        $result      = '';        $pos         = 0;        $strLen      = strlen($json);        $indentStr   = '  ';        $newLine     = "\n";        $prevChar    = '';        $outOfQuotes = true;        for ($i=0; $i<=$strLen; $i++) {            // Grab the next character in the string.            $char = substr($json, $i, 1);            // Are we inside a quoted string?            if ($char == '"' && $prevChar != '\\') {                $outOfQuotes = !$outOfQuotes;                // If this character is the end of an element,                // output a new line and indent the next line.            } else if(($char == '}' || $char == ']') && $outOfQuotes) {                $result .= $newLine;                $pos --;                for ($j=0; $j<$pos; $j++) {                    $result .= $indentStr;                }            }            // Add the character to the result string.            $result .= $char;            // If the last character was the beginning of an element,            // output a new line and indent the next line.            if (($char == ',' || $char == '{' || $char == '[') && $outOfQuotes) {                $result .= $newLine;                if ($char == '{' || $char == '[') {                    $pos ++;                }                for ($j = 0; $j < $pos; $j++) {                    $result .= $indentStr;                }            }            $prevChar = $char;        }        return "<pre>".$result."</pre>";    }    public static function json($code,$description=null,$data=null) {        if (is_null($description)) {            switch ($code) {                default:                    $description='';                    break;                case SQL_UPDATE_SUCCESS:                    $description="SQL Database has been successfully updated";                    break;                case NOTIFICATION_SUCCESS:                    $description="Successfully sent notification to user devices";                    break;                case LOGIN_SUCCESS:                    $description="Login successful";                    break;                case LOGOUT_SUCCESS:                    $description="Logout successful";                    break;                case REGISTER_SUCCESS:                    $description="Successfully registered user";                    break;                case SIGNATURE_SUCCESS:                    $description="Successfully digitally signed legal document";                    break;                case SIGNATURE_FAILED:                    $description="Failed to digitally sign legal document";                    break;                case PROMO_SUCCESS:                    $description="Successfully attached promo code to order";                    break;                case PROMO_FAILED:                    $description="An error occurred whilst trying to verify promo code";                    break;                case RESET_PASSWORD_FAILED:                    $description="Failed to reset password";                    break;                case RESET_PASSWORD_SUCCESS:                    $description="Successfully sent request to reset password";                    break;                case SET_PRIMARY_EMAIL_SUCCESS:                    $description="Successfully updated primary contact email";                    break;                case SET_PRIMARY_EMAIL_FAILED:                    $description="Failed to update primary contact email";                    break;                case SET_VARIABLE_SUCCESS:                    $description="Successfully set variable";                    break;                case SET_VARIABLE_FAILED:                    $description="Failed to set variable";                    break;            }        }        $dataJSON="";        if (!is_null($data)) {            $dataJSON=',"data":'.json_encode(is_array($data)?$data:array($data));        }        $returnJSON='{"r":{"code":'.$code.',"message":"'.$description.'"'.$dataJSON.'},"unique":'.rand().'}';//NOTE: MANUALLY PRINT JSON IN CASE OF JSON ERROR IS ACTUALLY PRINTED        //return self::prettify($returnJSON);///TODO: AFTER DEBUGGING AND TESTING, DELETE PRETTY PRINT!!#####################        return self::parseJSON($returnJSON);    }    public static function jsonWithData($description,$data=null,$use_json=true,$parse_sql_statement=true) {        if (($data instanceof PDOStatement&& $parse_sql_statement==true)||(is_array($data)&&$parse_sql_statement==false)) {            //data is valid        }else throw new HighException("Data specified is invalid");        $parseData=$data;        if ($parse_sql_statement) {            $fetched=$data->fetchAll(PDO::FETCH_ASSOC);            if (count($fetched)==1) $fetched=$fetched[0];            if ($use_json) {                $row_count=$data->rowCount();                $parseData=$row_count>0?$fetched:0;                return self::json(1,$description,$parseData);            }else {                return $fetched;            }        }else {            if ($use_json) {                return self::json(1,$description,$parseData);            }else return $parseData;        }    }    private static function parseJSON($json) {        header('Cache-Control: no-cache, must-revalidate');        header('Expires: Mon, 25 Dec 2015 05:00:00 GMT');        header('Content-type: application/json');        return $json;    }}?>